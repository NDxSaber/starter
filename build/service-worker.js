"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","bc1a92644a86e0234dd5acb1bc8fed63"],["/static/css/main.7184343f.css","30be2b01186907ab6954aea94d89dd7a"],["/static/js/main.27913b71.js","a99b21e4a908d526d92f9c52971fe7c7"],["/static/media/SamsungSans-Medium.5f244859.ttf","5f24485915683c10b48b81246fe961d7"],["/static/media/SamsungSans-Medium.6746fd17.woff","6746fd1774654db4a085c1d97545713d"],["/static/media/SamsungSans-Medium.d049971b.svg","d049971bfd7bc042bf15169f9cdedece"],["/static/media/SamsungSans-Medium.fb596807.eot","fb5968073cb2b3a9f2e4637c31cd1ac5"],["/static/media/SamsungSans-Regular.3e3f395e.svg","3e3f395e1947908552e4bea691a9d4dd"],["/static/media/SamsungSans-Regular.4f0c8dbd.eot","4f0c8dbdf7827a9aeb25b5973bcb2ea0"],["/static/media/SamsungSans-Regular.b573b3b0.woff","b573b3b0b47abf4673cbc5b133d1cd98"],["/static/media/SamsungSans-Regular.c5de1e4f.ttf","c5de1e4ff3008e2173147dcaaa45bc9b"],["/static/media/logo.4799e72a.png","4799e72a583eb2cc56e11bc82a6763f0"],["/static/media/logo.ee7cd8ed.svg","ee7cd8ed2dcec943251eb2763684fc6f"],["/static/media/myicon.35e4c14a.eot","35e4c14acb3076a4caf65f96a1cb68e4"],["/static/media/myicon.3ee66d9f.ttf","3ee66d9f621181b75c8401d071d90cda"],["/static/media/myicon.608b5f9a.woff","608b5f9a857537452313eb08f5eea1ba"],["/static/media/myicon.eb9f2ba4.svg","eb9f2ba499df71016798cf71309e0a8a"],["/static/media/option-house.eb18e6ca.jpg","eb18e6ca6146f6a9ef608a1df1fa6795"],["/static/media/option-land.a66358d5.jpg","a66358d589e0394eebfae7854baa2550"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});